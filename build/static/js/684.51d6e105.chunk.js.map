{"version":3,"file":"static/js/684.51d6e105.chunk.js","mappings":"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","sources":["Queryhooks/signup.ts","components/Avatar/style.tsx","components/Avatar/index.tsx","components/signup/style.tsx","components/signup/formItems.tsx","components/signup/SignUpForm.tsx","pages/signup.tsx","../node_modules/@ant-design/icons-svg/es/asn/EditOutlined.js","../node_modules/@ant-design/icons/es/icons/EditOutlined.js"],"sourcesContent":["import axios from \"axios\"\n\nlet SignUpRequest =async (data:any)=>await axios({\n    method:\"POST\",\n    url:`/user/register`,\n    data:data\n})\nexport default SignUpRequest","import styled from \"styled-components\";\n\nexport let AvatarContainer = styled.div`\n    display:relative;\n    width:fit-content;\n`;\n\nexport const StyledImage = styled.img`\n    width:90px;\n    height:90px;\n    border-radius:50px;\n    border:2px solid lavender;\n    object-fit:cover;\n    object-position:center;\n`;\n\nexport const StyledEditIcon = styled.button`\n    position:absolute;\n\n    bottom:-5px;\n    right:78%;\n    border-radius:25px;\n    border:none;\n`","import { AvatarContainer, StyledEditIcon, StyledImage } from \"./style\";\nimport { EditOutlined} from '@ant-design/icons';\nimport image from '../../public/logo192.png'\nimport { FC } from \"react\";\n\n\ninterface AvatarProps{\n    handleClick:()=>void;\n    photo:any;\n}\n\nlet Avatar:FC<AvatarProps> = ({handleClick,photo}) => {\n    return(\n        <AvatarContainer>\n            <StyledImage src={typeof photo === 'object' && photo ? URL.createObjectURL(photo) : image}/>\n            <StyledEditIcon type=\"button\" onClick={()=>handleClick()}>\n                <EditOutlined height='5px' width='5px'  />\n            </StyledEditIcon>\n        </AvatarContainer>\n    )\n}\nexport default Avatar;","import styled from \"styled-components\";\n\nexport const SignUpWrapper = styled.div`\n    width:400px;\n`;\n\nexport const SignUpFormContainer = styled.div`\n    display:flex;\n    flex-wrap:wrap;\n    height:90vh;\n    align-items:center;\n    justify-content:center;\n    padding-top:30px;\n\n`;\n\nexport const UnvisibleInputFile = styled.input`\n    display:none !important;\n`;","import {Form, Input, Upload } from \"antd\"\nimport ImgCrop from \"antd-img-crop\";\nimport { FC, HTMLAttributes, HtmlHTMLAttributes, useRef } from \"react\";\nimport Avatar from \"../Avatar\";\nimport { SignUpWrapper, UnvisibleInputFile } from \"./style\"\n\n\ninterface SignUpFormItemsProps{\n    onChange:(file:any)=>void;\n    photo:any\n}\n\n\nlet SignUpFormItems:FC<SignUpFormItemsProps> = ({onChange,photo}) =>{\n    let Inputref = useRef<any>()\n    const handleClick = () =>{\n        Inputref.current.click()\n    }\n    return(\n        <SignUpWrapper>\n\n            <Form.Item label='Photo' >\n                    <UnvisibleInputFile onChange={(e)=>onChange(e.target.files)} ref={Inputref} type='file' />\n                    <Avatar photo={photo} handleClick={()=>handleClick()}/>\n            </Form.Item>\n\n\n\n            <Form.Item\n                label=\"Fullname\"\n                name=\"fullname\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please input your fullname!' }]}\n            >\n                <Input />\n            </Form.Item>\n\n\n            <Form.Item\n                    label=\"Email\"\n                    name=\"email\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please input your email!' }]}\n                >\n                    <Input type='email' />\n            </Form.Item>\n\n\n            <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                hasFeedback\n                rules={[{ required: true, message: 'Please input your password!' }]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n            <Form.Item\n                name=\"confirm\"\n                label=\"Confirm Password\"\n                dependencies={['password']}\n                hasFeedback\n                rules={[\n                {\n                    required: true,\n                    message: 'Please confirm your password!',\n                },\n                ({ getFieldValue }) => ({\n                    validator(_, value) {\n                    if (!value || getFieldValue('password') === value) {\n                        return Promise.resolve();\n                    }\n                    return Promise.reject(new Error('The two passwords that you entered do not match!'));\n                    },\n                }),\n                ]}\n            >\n                <Input.Password />\n            </Form.Item>\n\n\n        </SignUpWrapper>\n    )\n}\n\nexport default SignUpFormItems","import { Button, Form, notification } from \"antd\";\nimport Text from \"antd/lib/typography/Text\";\nimport Title from \"antd/lib/typography/Title\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport SignUpRequest from \"../../Queryhooks/signup\";\nimport openNotification from \"../notification\";\nimport SignUpFormItems from \"./formItems\";\nimport {SignUpWrapper} from './style'\n\ninterface SignUpFormDatas{\n    fullname:string;\n    email:string;\n    photo:any;\n    password:string\n}\n\n\nlet SignUpForm = () =>{\n    const [photo, setphoto] = useState<any>();\n    const navigate = useNavigate()\n\n    const onChange = (file2:any) => {\n        setphoto(file2[0])\n    };\n\n\n    //if sign up request success\n    const onSuccess = (res:any) => {\n        if(res.data.error){\n            openNotification(\"error\",res.data.msg)\n        }\n        else if(!res.data.error){\n            openNotification(\"success\",\"You registered Successfully\")\n            navigate('/signin')\n        }\n    }\n\n\n    //if sign up request fails\n    const onError = () =>{\n        openNotification(\"error\",\"Please fill all required fields correctly\")\n    } \n\n    let {mutate,isLoading} = useMutation(SignUpRequest,{onError,onSuccess})\n\n\n    const onFinish = (values:SignUpFormDatas) => {\n        let data = new FormData()\n        data.append(\"email\",values.email)\n        data.append(\"password\",values.password)\n        photo && data.append(\"photo\",photo)\n        data.append('fullname',values.fullname)\n        mutate(data)\n      };\n    \n      const onFinishFailed = (errorInfo:any) => {\n        console.log('Failed:', errorInfo);\n      };\n    return(\n        <SignUpWrapper>\n            <Title level={5}>Sign Up</Title>\n            <Form \n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                layout='vertical'\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <SignUpFormItems photo={photo} onChange={(e)=>onChange(e)}/>\n                <Form.Item wrapperCol={{ offset: 0, span: 16 }}>\n                    <Button loading={isLoading} type=\"primary\" htmlType=\"submit\">\n                        Send\n                    </Button>\n                    <br/>\n                    <Text >Have an account?</Text> <Link  to=\"/signin\" >\n                        Sign in\n                    </Link>\n                </Form.Item>\n            \n            </Form>\n            </SignUpWrapper>\n    )\n}\n\nexport default SignUpForm;","import SignUpForm from \"../components/signup/SignUpForm\"\nimport { SignUpFormContainer } from \"../components/signup/style\"\n\nlet SignUpPage = () => {\n    return(\n        <SignUpFormContainer>\n            <SignUpForm/>\n        </SignUpFormContainer>\n    )\n}\nexport default SignUpPage;","// This icon file is generated automatically.\nvar EditOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M257.7 752c2 0 4-.2 6-.5L431.9 722c2-.4 3.9-1.3 5.3-2.8l423.9-423.9a9.96 9.96 0 000-14.1L694.9 114.9c-1.9-1.9-4.4-2.9-7.1-2.9s-5.2 1-7.1 2.9L256.8 538.8c-1.5 1.5-2.4 3.3-2.8 5.3l-29.5 168.2a33.5 33.5 0 009.4 29.8c6.6 6.4 14.9 9.9 23.8 9.9zm67.4-174.4L687.8 215l73.3 73.3-362.7 362.6-88.9 15.7 15.6-89zM880 836H144c-17.7 0-32 14.3-32 32v36c0 4.4 3.6 8 8 8h784c4.4 0 8-3.6 8-8v-36c0-17.7-14.3-32-32-32z\" } }] }, \"name\": \"edit\", \"theme\": \"outlined\" };\nexport default EditOutlined;\n","import _objectSpread from \"@babel/runtime/helpers/esm/objectSpread2\";\n// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport EditOutlinedSvg from \"@ant-design/icons-svg/es/asn/EditOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar EditOutlined = function EditOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, _objectSpread(_objectSpread({}, props), {}, {\n    ref: ref,\n    icon: EditOutlinedSvg\n  }));\n};\n\nEditOutlined.displayName = 'EditOutlined';\nexport default /*#__PURE__*/React.forwardRef(EditOutlined);"],"names":["SignUpRequest","data","axios","method","url","AvatarContainer","styled","StyledImage","StyledEditIcon","handleClick","photo","src","URL","createObjectURL","image","type","onClick","EditOutlined","height","width","SignUpWrapper","SignUpFormContainer","UnvisibleInputFile","onChange","Inputref","useRef","label","e","target","files","ref","current","click","name","hasFeedback","rules","required","message","dependencies","getFieldValue","validator","_","value","Promise","reject","Error","resolve","useState","setphoto","navigate","useNavigate","useMutation","onError","openNotification","onSuccess","res","error","msg","mutate","isLoading","Title","level","initialValues","remember","onFinish","values","FormData","append","email","password","fullname","layout","onFinishFailed","errorInfo","console","log","autoComplete","wrapperCol","offset","span","loading","htmlType","Text","to","props","React","AntdIcon","_objectSpread","icon","EditOutlinedSvg","displayName"],"sourceRoot":""}