{"version":3,"file":"static/js/626.ecef2c8f.chunk.js","mappings":"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","sources":["components/myblogs/formItems.tsx","Queryhooks/createBlog.ts","components/myblogs/create.tsx","pages/my-blogs/create.tsx"],"sourcesContent":["import { Col, Form, Input, Row } from \"antd\"\nimport BlotFormatter from 'quill-blot-formatter';\nimport { FC, useEffect } from \"react\";\nconst { TextArea } = Input;\n\n\ninterface PersonalBlogFormItems{\n    Quill:any;\n    quill:any;\n    quillRef:any,\n    handleMainPhotoChange:(e:any)=>void\n}\n\n\nlet PersonalBlogFormItems:FC<PersonalBlogFormItems> = ({quill,quillRef,Quill,handleMainPhotoChange}) =>{\n   \n    \n      if (Quill && !quill) {\n        // const BlotFormatter = require('quill-blot-formatter');\n        Quill.register('modules/blotFormatter', BlotFormatter);\n      }\n    \n      useEffect(() => {\n        if (quill) {\n          quill.on('text-change', (delta:any, oldContents:any) => {\n            console.log('Text change!');\n            console.log(\"Salom\",quillRef.current.firstChild.innerHTML);\n    \n            let currrentContents = quill.getContents();\n            console.log(currrentContents.diff(oldContents));\n          });\n        }\n      }, [quill, Quill]);\n    \n    return(\n        <Row>\n          <Col xl={24} xs={24} className='px-3'>\n              <Form.Item label='Photo'>\n                <input type='file' onChange={(e)=>handleMainPhotoChange(e.target.files)}/>\n                </Form.Item>\n            </Col>\n            <Col xl={24} xs={24} className='px-3'>\n                <Form.Item\n                    label=\"Title\"\n                    name=\"title\"\n                    hasFeedback\n                    rules={[{ required: true, message: 'Please input title!' }]}\n                >\n                    <Input />\n                </Form.Item>\n            </Col>\n            <Col span={24}>\n                <Form.Item\n                     label=\"Short Description\"\n                     name=\"short_desc\"\n                     rules={[{ required: true, message: 'Please input short description' }]}\n                >\n                \n                <TextArea showCount maxLength={100} style={{ height: 120 }}  />\n                </Form.Item>\n            </Col>\n            \n            <Col span={24} >\n                \n                    <Form.Item\n                         label=\"Description\"\n                         name=\"desc\"\n                         className=\"react-quill-container\"\n                    >\n                        <div ref={quillRef} />\n                    </Form.Item>\n                \n            </Col>\n        </Row>\n    )\n}\n\nexport default PersonalBlogFormItems","import axios from \"axios\"\nlet access_token = localStorage.getItem('access_token')\nlet refresh_token = localStorage.getItem('refresh_token')\n\n\nlet createBlog = async (data:any) => await axios({\n        method:'POST',\n        url:'/blogs',\n        headers:{\n            \"Authorization\":`Bearer ${access_token}`,\n            'refresh':`${refresh_token}`\n        },\n        data:data\n    })\nexport default createBlog;","import { Button, Form, notification } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport axios from \"axios\";\nimport { useState } from \"react\";\nimport { useMutation } from \"react-query\";\nimport { useQuill } from \"react-quilljs\";\nimport { useNavigate } from \"react-router-dom\";\nimport createBlog from \"../../Queryhooks/createBlog\";\nimport PersonalBlogFormItems from \"./formItems\";\n\nlet BlogCreateForm = () => {\n    const [photo,setphoto] = useState<any>()\n    let navigate = useNavigate()\n\n    //if request fails\n    const onError = () =>{\n        openNotification(\"error\",\"Something went wrong\")\n    }\n\n    //if request successfull\n    const onSuccess = (res:any) =>{\n        if(res.data.error){\n            openNotification(\"error\",res.data.msg)\n        }else if(!res.data.error){\n            openNotification(\"success\",\"You created a blog successfully\")\n            navigate('/profile/blogs')\n        }\n    }\n\n    let {mutate,isLoading} = useMutation(createBlog,{onError,onSuccess})\n\n    //Quill configuration\n    const { quill, quillRef, Quill } = useQuill({\n        modules: { blotFormatter: {} }\n    });\n\n\n    //Photo change\n    const handleMainPhotoChange = (e:any)=>{\n        setphoto(e[0])\n    }\n\n    //Notification configuration\n    const openNotification = (title:'success' | 'error',description:string) => {\n        notification[title]({\n          message: title,\n          description:description,\n        });\n      };\n    \n\n    //Create a blog\n    const onFinish = (values:any) => {\n        let formdata = new FormData()\n        formdata.append('title',values.title)\n        formdata.append('short_desc',values.short_desc)\n        formdata.append('photo',photo)\n        formdata.append('description',quillRef.current.firstChild.innerHTML)\n        mutate(formdata)\n      };\n    \n\n    // if form is failed\n    const onFinishFailed = (errorInfo:any) => {\n    console.log('Failed:', errorInfo);\n    };\n    \n    return(\n        <>\n            <Title level={3}>\n                Create a blog\n            </Title>\n            <Form \n                name=\"basic\"\n                initialValues={{ remember: true }}\n                onFinish={onFinish}\n                layout='vertical'\n                onFinishFailed={onFinishFailed}\n                autoComplete=\"off\"\n            >\n                <PersonalBlogFormItems handleMainPhotoChange={(e)=>handleMainPhotoChange(e)} quill={quill} Quill={Quill} quillRef={quillRef}   />\n                <Form.Item wrapperCol={{ offset: 0, span: 16 }}>\n                    <Button loading={isLoading} type=\"primary\" htmlType=\"submit\">\n                        Send\n                    </Button>\n                    \n                </Form.Item>\n            </Form>\n        </>\n    )\n}\n\nexport default BlogCreateForm;","import AppLayout from \"../../components/layout\"\nimport BlogCreateForm from \"../../components/myblogs/create\"\n\nlet BlogCreate = () => {\n    return(\n        <AppLayout breadcrumb={[{url:'/',name:'Home'},{url:'/',name:\"My blogs\"},{url:'#',name:'Create'}]}>\n            <BlogCreateForm />\n        </AppLayout>\n    )\n    \n}\nexport default BlogCreate;"],"names":["TextArea","Input","quill","quillRef","Quill","handleMainPhotoChange","register","BlotFormatter","useEffect","on","delta","oldContents","console","log","current","firstChild","innerHTML","currrentContents","getContents","diff","xl","xs","className","label","type","onChange","e","target","files","name","hasFeedback","rules","required","message","span","showCount","maxLength","style","height","ref","access_token","localStorage","getItem","refresh_token","createBlog","data","axios","method","url","headers","useState","photo","setphoto","navigate","useNavigate","useMutation","onError","openNotification","onSuccess","res","error","msg","mutate","isLoading","useQuill","modules","blotFormatter","title","description","notification","Title","level","initialValues","remember","onFinish","values","formdata","FormData","append","short_desc","layout","onFinishFailed","errorInfo","autoComplete","wrapperCol","offset","loading","htmlType","breadcrumb"],"sourceRoot":""}